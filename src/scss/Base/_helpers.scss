@use "../Utils/variables" as var;
@use "../Utils/functions" as func;

:root {
  --wrapper-padding-inline: 2em;
  --wrapper-max-width: 80rem;
}

// hide the elements and make screen-reader only
// read the content of the element
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

li,
ul,
ol {
  list-style: none;
  margin: 0;
  padding: 0;
}

button,
a {
  background: 0;
  border: none;
  font: inherit;
  color: inherit;
  cursor: pointer;
  text-decoration: none;
}

.header-bg {
  background: url("./images/bg-pattern-intro-mobile.svg") -20em -15em,
    linear-gradient(to bottom, var.$bg-gradient-1);
  background-repeat: no-repeat;
  padding-bottom: 10em;
  border-bottom-left-radius: 7em;
}

.wrapper {
  width: min(var(--wrapper-max-width), 100% - 2em);
  margin-inline: auto;
}

.full-width-split-screen > :not(img) {
  padding-inline: var(--wrapper-padding-inline);
  display: grid;
  gap: 2em;
}

.full-width-split-screen > img {
  margin-inline: auto;
}

@media (min-width: var.$screen) {
  .header-bg {
    background: url("./images/bg-pattern-intro-mobile.svg") right,
      linear-gradient(to right, var.$bg-gradient-1);
    background-repeat: no-repeat;
    background-size: cover;
  }

  .full-width-split-screen {
    display: grid;
    grid-template-columns:
      minmax(var(--wrapper-padding-inline), 1fr)
      minmax(0, calc(var(--wrapper-max-width) / 2))
      minmax(0, calc(var(--wrapper-max-width) / 2))
      minmax(var(--wrapper-padding-inline), 1fr);
  }

  .full-width-split-screen > img {
    grid-column: 3 / -1;
    grid-row: 1;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .full-width-split-screen > :not(img) {
    grid-column: 2 / 3;
    grid-row: 1;
    align-content: center;
    text-align: left;
  }
}
